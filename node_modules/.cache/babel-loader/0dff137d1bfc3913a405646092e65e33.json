{"ast":null,"code":"import _classCallCheck from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\src\\\\components\\\\DynamicUserForm\\\\DynamicUserForm.jsx\";\nimport React, { Component } from \"react\";\nimport Register from \"./Register/Register\";\nimport Login from \"./Login/Login\";\nimport { Grid, Snackbar, SnackbarContent } from \"@material-ui/core\";\nimport { SnackbarProvider, withSnackbar } from 'notistack';\n\nvar DynamicUserForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DynamicUserForm, _Component);\n\n  function DynamicUserForm(props) {\n    var _this;\n\n    _classCallCheck(this, DynamicUserForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DynamicUserForm).call(this, props));\n    _this.state = {\n      snackOpened: false,\n      snackMessage: null\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSnackClose = _this.handleSnackClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DynamicUserForm, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event, data) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var action = this.props.registerForm ? 'signup' : 'singin';\n      fetch(\"http://localhost:9999/auth/\".concat(action), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (body) {\n        if (body.errors.length > 0) {\n          _this2.setState({\n            snackOpened: true,\n            snackMessage: _this2.props.registerForm ? 'Registration Failed' : 'Login Failed'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSnackClose\",\n    value: function handleSnackClose() {\n      this.setState({\n        snackOpened: !this.state.snackOpened\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 0 // alignItems=\"center\"\n        ,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.props.registerForm ? React.createElement(Register, {\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))), React.createElement(SnackbarProvider, {\n        maxSnack: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        action: \"\",\n        \"aria-describedby\": \"client-snackbar\",\n        open: this.state.snackOpened,\n        autoHideDuration: 5000,\n        onClose: this.handleSnackClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, this.state.snackMessage),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DynamicUserForm;\n}(Component);\n\nexport default DynamicUserForm;","map":{"version":3,"sources":["D:\\Softuni\\JS-Web\\ReactJS\\ExamProject\\react-app\\src\\components\\DynamicUserForm\\DynamicUserForm.jsx"],"names":["React","Component","Register","Login","Grid","Snackbar","SnackbarContent","SnackbarProvider","withSnackbar","DynamicUserForm","props","state","snackOpened","snackMessage","handleSubmit","bind","handleSnackClose","event","data","preventDefault","action","registerForm","fetch","method","headers","body","JSON","stringify","then","response","json","errors","length","setState","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport Register from \"./Register/Register\";\r\nimport Login from \"./Login/Login\";\r\nimport {Grid, Snackbar, SnackbarContent} from \"@material-ui/core\";\r\nimport { SnackbarProvider, withSnackbar } from 'notistack';\r\n\r\nclass DynamicUserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackOpened: false,\r\n            snackMessage: null\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSnackClose = this.handleSnackClose.bind(this);\r\n    }\r\n\r\n    handleSubmit(event, data) {\r\n        event.preventDefault();\r\n        const action = this.props.registerForm ? 'signup' : 'singin';\r\n\r\n        fetch(`http://localhost:9999/auth/${action}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => response.json())\r\n            .then(body => {\r\n                if (body.errors.length > 0) {\r\n                    this.setState({\r\n                        snackOpened: true,\r\n                        snackMessage: this.props.registerForm ? 'Registration Failed' : 'Login Failed'\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    handleSnackClose() {\r\n        this.setState({snackOpened: !this.state.snackOpened})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                // alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid container spacing={0} justify=\"center\">\r\n                    <Grid item xs={10}>\r\n                        {\r\n                            this.props.registerForm\r\n                                ? (<Register handleSubmit={this.handleSubmit}/>)\r\n                                : (<Login/>)\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <SnackbarProvider maxSnack={3}>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    action=\"\"\r\n                    aria-describedby=\"client-snackbar\"\r\n                    open={this.state.snackOpened}\r\n                    autoHideDuration={5000}\r\n                    onClose={this.handleSnackClose}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id'\r\n                    }}\r\n                    message={<span id=\"message-id\">{this.state.snackMessage}</span>}\r\n                />\r\n                </SnackbarProvider>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default DynamicUserForm;"]},"metadata":{},"sourceType":"module"}