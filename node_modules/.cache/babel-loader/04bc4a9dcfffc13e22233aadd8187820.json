{"ast":null,"code":"import _classCallCheck from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ExamProject\\\\react-app\\\\src\\\\components\\\\DynamicUserForm\\\\DynamicUserForm.jsx\";\nimport React, { Component } from \"react\";\nimport Register from \"./Register/Register\";\nimport Login from \"./Login/Login\";\nimport { Grid, Snackbar, IconButton } from \"@material-ui/core\";\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport SnackbarWrapper from \"../SnackbarWrapper/SnackbarWrapper\";\nvar emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nvar DynamicUserForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DynamicUserForm, _Component);\n\n  function DynamicUserForm(props) {\n    var _this;\n\n    _classCallCheck(this, DynamicUserForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DynamicUserForm).call(this, props));\n    _this.state = {\n      snackOpened: false,\n      snackMessage: null,\n      snackType: null\n    };\n    _this.registerUser = _this.registerUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSnackClose = _this.handleSnackClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DynamicUserForm, [{\n    key: \"handleSnackClose\",\n    value: function handleSnackClose() {\n      this.setState({\n        snackOpened: !this.state.snackOpened\n      });\n    }\n  }, {\n    key: \"registerUser\",\n    value: function registerUser(event, data) {\n      var _this2 = this;\n\n      event.preventDefault();\n      fetch('http://localhost:9999/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (body) {\n        console.log(body);\n\n        if (body.errors) {\n          _this2.setState({\n            snackOpened: true,\n            snackType: \"error\",\n            snackMessage: _this2.props.registerForm ? 'Registration failed!' : 'Login failed!'\n          });\n        } else {\n          _this2.setState({\n            snackOpened: true,\n            snackType: \"success\",\n            snackMessage: _this2.props.registerForm ? body.message : 'Login successful!'\n          });\n\n          _this2.props.loginUser({\n            userEmail: data.email,\n            password: data.password\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 0 // alignItems=\"center\"\n        ,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.registerForm ? React.createElement(Register, {\n        handleSubmit: this.registerUser,\n        emailRegex: emailRegex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleSubmit: this.props.loginUser,\n        emailRegex: emailRegex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(SnackbarWrapper, {\n        handleSnackClose: this.handleSnackClose,\n        snackOpened: this.state.snackOpened,\n        snackMessage: this.state.snackMessage,\n        snackType: this.state.snackType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DynamicUserForm;\n}(Component);\n\nexport default DynamicUserForm;","map":{"version":3,"sources":["D:\\Softuni\\JS-Web\\ReactJS\\ExamProject\\react-app\\src\\components\\DynamicUserForm\\DynamicUserForm.jsx"],"names":["React","Component","Register","Login","Grid","Snackbar","IconButton","Close","CloseIcon","SnackbarWrapper","emailRegex","DynamicUserForm","props","state","snackOpened","snackMessage","snackType","registerUser","bind","handleSnackClose","setState","event","data","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","errors","registerForm","message","loginUser","userEmail","email","password"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport Register from \"./Register/Register\";\r\nimport Login from \"./Login/Login\";\r\nimport {Grid, Snackbar, IconButton} from \"@material-ui/core\";\r\nimport {Close as CloseIcon} from '@material-ui/icons'\r\nimport SnackbarWrapper from \"../SnackbarWrapper/SnackbarWrapper\";\r\n\r\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nclass DynamicUserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackOpened: false,\r\n            snackMessage: null,\r\n            snackType: null\r\n        };\r\n\r\n        this.registerUser = this.registerUser.bind(this);\r\n        this.handleSnackClose = this.handleSnackClose.bind(this);\r\n    }\r\n\r\n    handleSnackClose() {\r\n        this.setState({snackOpened: !this.state.snackOpened})\r\n    }\r\n\r\n    registerUser(event, data) {\r\n        event.preventDefault();\r\n\r\n        fetch('http://localhost:9999/auth/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => response.json())\r\n            .then(body => {\r\n                console.log(body);\r\n                if (body.errors) {\r\n                    this.setState({\r\n                        snackOpened: true,\r\n                        snackType: \"error\",\r\n                        snackMessage: this.props.registerForm ? 'Registration failed!' : 'Login failed!'\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        snackOpened: true,\r\n                        snackType: \"success\",\r\n                        snackMessage: this.props.registerForm ? body.message : 'Login successful!'\r\n                    });\r\n                    this.props.loginUser({userEmail: data.email, password: data.password});\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                // alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid container spacing={0} justify=\"center\">\r\n                    <Grid item xs={10}>\r\n                        {\r\n                            this.props.registerForm\r\n                                ? (<Register handleSubmit={this.registerUser} emailRegex={emailRegex}/>)\r\n                                : (<Login handleSubmit={this.props.loginUser} emailRegex={emailRegex}/>)\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <SnackbarWrapper handleSnackClose={this.handleSnackClose} snackOpened={this.state.snackOpened}\r\n                                 snackMessage={this.state.snackMessage} snackType={this.state.snackType}/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DynamicUserForm;"]},"metadata":{},"sourceType":"module"}