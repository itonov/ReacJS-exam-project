{"ast":null,"code":"import _defineProperty from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Softuni\\\\JS-Web\\\\ReactJS\\\\ReactJS-exam-project\\\\react-app\\\\src\\\\components\\\\DynamicAddForm\\\\AddFlavourForm\\\\AddFlavourForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, TextField, Typography, RadioGroup, FormControlLabel, Radio, Button } from \"@material-ui/core\";\n\nvar AddFlavourForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFlavourForm, _Component);\n\n  function AddFlavourForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddFlavourForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFlavourForm).call(this, props));\n    _this.state = {\n      name: null,\n      price: null,\n      description: null,\n      availability: null,\n      quantity: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddFlavour = _this.handleAddFlavour.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddFlavourForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleAddFlavour\",\n    value: function handleAddFlavour() {\n      fetch('http://localhost:9999/flavour/create', {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Add new flavour\"), React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        alignItems: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: this.handleAddFlavour,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        margin: \"normal\",\n        label: \"Name\",\n        name: \"name\",\n        type: \"text\",\n        onChange: this.handleChange,\n        InputProps: {\n          \"error\": this.state.name === ''\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        margin: \"normal\",\n        label: \"Price\",\n        name: \"price\",\n        type: \"number\",\n        onChange: this.handleChange,\n        InputProps: {\n          \"error\": this.state.price === ''\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Description\",\n        name: \"description\",\n        multiline: true,\n        rows: 4,\n        rowsMax: 8,\n        type: \"text\",\n        onChange: this.handleChange,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        label: \"Availability\",\n        name: \"availability\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        value: \"In Stock\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }),\n        label: \"In Stock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), this.state.availability === 'In Stock' ? React.createElement(TextField, {\n        margin: \"normal\",\n        label: \"Quantity\",\n        name: \"quantity\",\n        type: \"number\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }) : null, React.createElement(FormControlLabel, {\n        value: \"External Order\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }),\n        label: \"External Order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"Unavailable\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }),\n        label: \"Unavailable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Add flavour\"))));\n    }\n  }]);\n\n  return AddFlavourForm;\n}(Component);\n\nexport default AddFlavourForm;","map":{"version":3,"sources":["D:\\Softuni\\JS-Web\\ReactJS\\ReactJS-exam-project\\react-app\\src\\components\\DynamicAddForm\\AddFlavourForm\\AddFlavourForm.jsx"],"names":["React","Component","Grid","TextField","Typography","RadioGroup","FormControlLabel","Radio","Button","AddFlavourForm","props","state","name","price","description","availability","quantity","handleChange","bind","handleAddFlavour","event","setState","target","value","fetch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Grid, TextField, Typography, RadioGroup, FormControlLabel, Radio, Button} from \"@material-ui/core\";\r\n\r\nclass AddFlavourForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: null,\r\n            price: null,\r\n            description: null,\r\n            availability: null,\r\n            quantity: null,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAddFlavour = this.handleAddFlavour.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    handleAddFlavour() {\r\n        fetch('http://localhost:9999/flavour/create', {\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Add new flavour\r\n                </Typography>\r\n                <Grid container spacing={8} alignItems=\"flex-end\">\r\n                    <form noValidate autoComplete=\"off\" onSubmit={this.handleAddFlavour}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin={\"normal\"}\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                onChange={this.handleChange}\r\n                                InputProps={{\r\n                                    \"error\": (\r\n                                        this.state.name === ''\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin={\"normal\"}\r\n                                label=\"Price\"\r\n                                name=\"price\"\r\n                                type=\"number\"\r\n                                onChange={this.handleChange}\r\n                                InputProps={{\r\n                                    \"error\": (\r\n                                        this.state.price === ''\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                label=\"Description\"\r\n                                name=\"description\"\r\n                                multiline={true}\r\n                                rows={4}\r\n                                rowsMax={8}\r\n                                type=\"text\"\r\n                                onChange={this.handleChange}\r\n                                margin={\"normal\"}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <RadioGroup\r\n                                label=\"Availability\"\r\n                                name=\"availability\"\r\n                                value={this.state.value}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <FormControlLabel value=\"In Stock\" control={<Radio/>} label=\"In Stock\"/>\r\n                                {\r\n                                    this.state.availability === 'In Stock'\r\n                                        ?\r\n                                        <TextField\r\n                                            margin={\"normal\"}\r\n                                            label=\"Quantity\"\r\n                                            name=\"quantity\"\r\n                                            type=\"number\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        : null\r\n                                }\r\n                                <FormControlLabel value=\"External Order\" control={<Radio/>} label=\"External Order\"/>\r\n                                <FormControlLabel value=\"Unavailable\" control={<Radio/>} label=\"Unavailable\"/>\r\n                            </RadioGroup>\r\n                        </Grid>\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                            Add flavour\r\n                        </Button>\r\n                    </form>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFlavourForm;"]},"metadata":{},"sourceType":"module"}